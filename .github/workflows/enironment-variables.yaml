name: Environment Variables
on: [push]

env:
   WF_LEVEL_ENV: Available at Workflow Level to all jobs


jobs:
  env-vars-and-context:
    runs-on: ubuntu-latest
    # if: $GITHUB_REF == 'refs/heads/main' # DONT use this condition, it will not work as expected 
    if: github.ref == 'refs/heads/main' # Use this condition to check the branch 
    env:
      JOB_LEVEL_ENV: Available to all steps in this job env-vars-and-context
    steps:
      - name: Log ENV VAR
        run: echo $GITHUB_REF

      - name: Log Context
        run: echo '${{ github.ref }}'
      - name: Set ENV Var
        run: |
          echo "NEW_ENV_VAR=$(date)" >> "$GITHUB_ENV" 
          echo "JOB_LEVEL_ENV=$RANDOM" >> "$GITHUB_ENV" # This will override the JOB_LEVEL_ENV variable defined at the job level 
      - name: Multiline ENV Var
        run: |
          DELIMITER=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "RANDOM_JOKE<<$DELIMITER" >> "$GITHUB_ENV"
          echo "Here is a joke: " >> "$GITHUB_ENV" 
          curl -s https://icanhazdadjoke.com/ >> "$GITHUB_ENV"
          echo "" >> "$GITHUB_ENV" 
          echo $DELIMITER >> "$GITHUB_ENV"  
      - name: Log Custom ENV Vars
        env:
          STEP_LEVEL_ENV: Available to this step only 
          WF_LEVEL_ENV: Overridden at step level 
        run: |
          echo '${{ env.STEP_LEVEL_ENV }}' # context can be used in if conditions !!!
          echo $STEP_LEVEL_ENV # Variable can not be used in if conditions, only contexts can be used in if conditions !!!!
          echo $WF_LEVEL_ENV # This will print the value of the WF_LEVEL_ENV variable
          echo $JOB_LEVEL_ENV # This will print the value of the JOB_LEVEL_ENV variable 
          echo $NEW_ENV_VAR # This will print the value of the NEW_ENV_VAR variable 
      #- name: Print Environment Variables
      #  run: |
      #    echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
      #    echo "GITHUB_REF: $GITHUB_REF"
      #    echo "GITHUB_SHA: $GITHUB_SHA"
      #    echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
      #    echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
      #    echo "GITHUB_ACTOR: $GITHUB_ACTOR"
      #    echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
      #    echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
      #    echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
#
      #- name: Print Context Variables
      #  run: |
      #    echo "Context Variables:"
      #    echo "${{ toJson(github) }}"